== Welcome to NothingCalendar
  This project aims to help tracking arbitrary events. Such as working out every day, quiting smoking, reading, writing, or whatever chain you are currently working on. It is inspired by the popular Seinfeld don't break the chain concept. It also was based originally on Calendar about Nothing, which implements the don't break the chain concept for commiting to open source. I wanted to track keeping a chain alive for things other than open source so this project began.

  Goals:
    * Simple shared chain calendar
    * full mobile support
    * full offline mode (installable as html5 app, offline syncing, etc)
    * possible phonegap compatibility for native android / iphone app.

**TODOS**
  * possibly go back to live link (can't return false) but not always updating links
  * shareable urls (user alias or user id?)
  * multiple track chains (tagging on chains (workout, quit smoking, etc))
  * different concept of goal (not every day but twice a week (Erin's feature))
  * add to igoogle
  * possible osx widget
  * android widget
  * full api support

    * if a cookie expires or is cleared but there is local storage don't clear it, next time they log in compare if the server or local storage has more recent activity and take most recent activity
    * login takes most recent activity and offers link to restore from server
    * logged out case doesn't attempt sync, but provides notif (let them know they must login for server side syncing)
    * if sync attemtped when logged out server returns error which displays notif
    * clicking anything and THEN signing in syncs the new single click and wipes out your whole history!!! Fix
    * offers take local, take server version, or merge on conflict.

++++++ Later ++++++
  * Build out as a generic rails or ActiveRecord plugin that syncs offline storage / json. Doesn't have to be on user model. Needs a unique id to associate / sync to and a key. Then you could have acts_as_syncable or some such on any model, or perhaps the plugin creates its own model with a foriegn key to the declared model. either way to allow for generic sync, restore, and merge.